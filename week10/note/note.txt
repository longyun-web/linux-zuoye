#include "my.h"
static void fun1(void){
	printf("invoked callbackfun!\n");
}
int main(){
	atexit(fun1);
	printf("hello  ");
	exit(0);
}
上述代码运行结果
hello  invoked callbackfun!
将exit(0)改成_exit(0)
上述代码运行结果(无结果，直接结束)
将exit(0)改成_exit(0)
printf("hello  ");改成printf("hello  \n");
上述代码运行结果
hello  
#include"my.h"                                                                                                                                                                                                                                 

int v=99;
int g=88;
int main(){
	int v=99;
	pid_t pid;
	pid=fork();		//-----1
	if(pid<0){
		perror("fork failed!");
		exit(-1);
	}
	else if(pid=0){
		g++;
		v++;
		printf("child:pid=%d,g=%d,v=%d",getpid(),g,v);
		return 0;		//----2
	}
	else{
		printf("return value=%d\n",pid);
		printf("parent :pid=%d,g=%d,v=%d\n",pid,g,v);
		return 0;
	}
}
上述代码运行结果
return value=0
parent :pid=0,g=88,v=99
return value=0
parent :pid=0,g=88,v=99
将2处return 0;改成exit(0);
上述代码运行结果(无结果，直接结束)
将2处return 0;改成_exit(0);
parent :pid=0,g=88,v=99
return value=0
parent :pid=0,g=88,v=99
